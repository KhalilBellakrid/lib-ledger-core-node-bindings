// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from erc20.djinni

#ifndef DJINNI_GENERATED_NJSERC20LIKEACCOUNT_HPP
#define DJINNI_GENERATED_NJSERC20LIKEACCOUNT_HPP


#include "../include/ERC20Token.hpp"
#include "NJSAmountCpp.hpp"
#include "NJSBigIntCpp.hpp"
#include "NJSERC20LikeOperationCpp.hpp"
#include <cstdint>
#include <memory>
#include <string>
#include <vector>

#include <nan.h>
#include <node.h>
#include "../include/ERC20LikeAccount.hpp"

using namespace v8;
using namespace node;
using namespace std;
using namespace ledger::core::api;

class NJSERC20LikeAccount: public Nan::ObjectWrap {
public:

    static void Initialize(Local<Object> target);
    virtual ~NJSERC20LikeAccount() {};
    NJSERC20LikeAccount(const std::shared_ptr<ledger::core::api::ERC20LikeAccount> &iERC20LikeAccount):_ERC20LikeAccount(iERC20LikeAccount){};

    static Handle<Object> wrap(const std::shared_ptr<ledger::core::api::ERC20LikeAccount> &object);
    static Nan::Persistent<ObjectTemplate> ERC20LikeAccount_prototype;
    std::shared_ptr<ledger::core::api::ERC20LikeAccount> getCppImpl(){return _ERC20LikeAccount;};

private:
    static NAN_METHOD(getToken);

    static NAN_METHOD(getAddress);

    static NAN_METHOD(getBalance);

    static NAN_METHOD(getOperations);

    static NAN_METHOD(getTransferToAddressData);

    static NAN_METHOD(New);

    static NAN_METHOD(isNull);
    std::shared_ptr<ledger::core::api::ERC20LikeAccount> _ERC20LikeAccount;
};
#endif //DJINNI_GENERATED_NJSERC20LIKEACCOUNT_HPP
